{"ast":null,"code":"var _jsxFileName = \"/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/ImageUploader.js\";\nimport React, { Component } from 'react';\nimport placeholderImage from '../images/placeholder.png';\n\nconst axios = require(\"axios\");\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.onUpload = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append(\"image\", this.state.file);\n      const uploadConfig = {\n        headers: {\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      axios.post(\"http://localhost:3001/uploads/\" + localStorage.getItem(\"user_id\"), formData, uploadConfig).then(response => {\n        alert(\"Image uploaded successfully!\");\n      }).catch(err => {\n        console.log(\"Error\");\n      });\n    };\n\n    this.state = {\n      file: null,\n      placeholder: placeholderImage\n    };\n    this.onUpload = this.onUpload.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    let title = null;\n\n    if (localStorage.getItem(\"is_owner\")) {\n      title = \"Owner Image\";\n    } else {\n      title = \"Customer Image\";\n    }\n\n    return React.createElement(\"form\", {\n      onSubmit: this.onUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, title), React.createElement(\"img\", {\n      src: placeholderImage,\n      style: {\n        height: '10%',\n        width: '10%'\n      },\n      alt: \"GrubHub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Upload\"));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/ImageUploader.js"],"names":["React","Component","placeholderImage","axios","require","ImageUploader","constructor","props","onChange","e","setState","file","target","files","onUpload","preventDefault","formData","FormData","append","state","uploadConfig","headers","post","localStorage","getItem","then","response","alert","catch","err","console","log","placeholder","bind","render","title","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,QAVmB,GAUPC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf;AADI,OAAd;AAGH,KAdkB;;AAAA,SAgBnBC,QAhBmB,GAgBPL,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyB,KAAKC,KAAL,CAAWR,IAApC;AACA,YAAMS,YAAY,GAAG;AACjBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADQ,OAArB;AAKAlB,MAAAA,KAAK,CAACmB,IAAN,CAAW,mCAAiCC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAA5C,EAA6ER,QAA7E,EAAuFI,YAAvF,EACKK,IADL,CACUC,QAAQ,IAAI;AACdC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,OAHL,EAIKC,KAJL,CAIWC,GAAG,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,OANL;AAOH,KAhCkB;;AAEf,SAAKZ,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE,IADG;AAETqB,MAAAA,WAAW,EAAE9B;AAFJ,KAAb;AAIA,SAAKY,QAAL,GAAgB,KAAKA,QAAL,CAAcmB,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKzB,QAAL,GAAgB,KAAKA,QAAL,CAAcyB,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AA0BDC,EAAAA,MAAM,GAAG;AACL,QAAIC,KAAK,GAAG,IAAZ;;AACA,QAAGZ,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAH,EAAoC;AAChCW,MAAAA,KAAK,GAAG,aAAR;AACH,KAFD,MAGI;AACAA,MAAAA,KAAK,GAAG,gBAAR;AACH;;AACD,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKrB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKqB,KAAL,CADJ,EAEI;AAAK,MAAA,GAAG,EAAEjC,gBAAV;AAA4B,MAAA,KAAK,EAAE;AAAEkC,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAE;AAAxB,OAAnC;AAAoE,MAAA,GAAG,EAAC,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAEwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFxF,EAE6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF7F,EAGI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAK7B,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAQH;;AAnDiC;;AAuDtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport placeholderImage from '../images/placeholder.png';\nconst axios = require(\"axios\");\n\nclass ImageUploader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null,\n            placeholder: placeholderImage\n        };\n        this.onUpload = this.onUpload.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        });\n    }\n\n    onUpload = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"image\", this.state.file);\n        const uploadConfig = {\n            headers: {\n                \"content-type\": \"multipart/form-data\"\n            }\n        };\n        axios.post(\"http://localhost:3001/uploads/\"+localStorage.getItem(\"user_id\"), formData, uploadConfig)\n            .then(response => {\n                alert(\"Image uploaded successfully!\");\n            })\n            .catch(err => {\n                console.log(\"Error\");\n            });\n    }\n\n    render() {\n        let title = null;\n        if(localStorage.getItem(\"is_owner\")){\n            title = \"Owner Image\";\n        }\n        else{\n            title = \"Customer Image\";\n        }\n        return (\n            <form onSubmit={this.onUpload}>\n                <h3>{title}</h3>\n                <img src={placeholderImage} style={{ height: '10%', width: '10%' }} alt='GrubHub' /><br/><br/>\n                <input type=\"file\" name=\"image\" onChange={this.onChange} />\n                <button type=\"submit\">Upload</button>\n            </form>\n        )\n    }\n}\n\n\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}