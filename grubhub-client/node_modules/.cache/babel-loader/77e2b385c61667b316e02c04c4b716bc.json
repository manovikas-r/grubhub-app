{"ast":null,"code":"var _jsxFileName = \"/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/login.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport loginImage from '../images/loginImage.png';\nconst imageWidth = {\n  width: '50%'\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\"\n    };\n    this.submitLogin = this.submitLogin.bind(this);\n  }\n\n  submitLogin() {\n    axios.get('http://localhost:3001/customer/4').then(response => {\n      console.log(\"Status Code : \", response.status);\n\n      if (response.status === 200) {\n        this.setState({\n          user: response[0].name\n        });\n      } else {\n        this.setState({\n          user: \"No Data\"\n        });\n      }\n    }).catch(error => {\n      this.setState({\n        user: error.response\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: loginImage,\n      style: imageWidth,\n      alt: \"GrubHub\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.submitLogin,\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Show Users\"));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/login.js"],"names":["React","Component","axios","loginImage","imageWidth","width","Login","constructor","props","state","user","submitLogin","bind","get","then","response","console","log","status","setState","name","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;;AAIA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,GAAE;AACTT,IAAAA,KAAK,CAACW,GAAN,CAAU,kCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,QAAQ,CAACG,MAAtC;;AACA,UAAGH,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AACvB,aAAKC,QAAL,CAAc;AACVT,UAAAA,IAAI,EAAGK,QAAQ,CAAC,CAAD,CAAR,CAAYK;AADT,SAAd;AAGH,OAJD,MAKI;AACA,aAAKD,QAAL,CAAc;AACVT,UAAAA,IAAI,EAAG;AADG,SAAd;AAGH;AACR,KAbD,EAcCW,KAdD,CAcOC,KAAK,IAAI;AACZ,WAAKH,QAAL,CAAc;AACVT,QAAAA,IAAI,EAAGY,KAAK,CAACP;AADH,OAAd;AAGH,KAlBD;AAmBH;;AAEDQ,EAAAA,MAAM,GAAE;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAK,MAAA,GAAG,EAAIpB,UAAZ;AAAwB,MAAA,KAAK,EAAIC,UAAjC;AAA6C,MAAA,GAAG,EAAG,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADG,EAEH;AAAQ,MAAA,OAAO,EAAI,KAAKO,WAAxB;AAAqC,MAAA,KAAK,EAAC,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFG,CADJ;AAMF;;AAtCyB;;AAyC9B,eAAeL,KAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport loginImage from '../images/loginImage.png'\nconst imageWidth = {\n    width: '50%'\n};\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            user: \"\"\n        };\n        this.submitLogin = this.submitLogin.bind(this);\n    }\n\n    submitLogin(){\n        axios.get('http://localhost:3001/customer/4')\n        .then(response => {\n                console.log(\"Status Code : \",response.status);\n                if(response.status === 200){\n                    this.setState({\n                        user : response[0].name\n                    })\n                }\n                else{\n                    this.setState({\n                        user : \"No Data\"\n                    })\n                }\n        })\n        .catch(error => {\n            this.setState({\n                user : error.response\n            })\n        });\n    }\n\n    render(){\n       return (\n           <div>\n        <div><img src = {loginImage} style = {imageWidth} alt = 'GrubHub'/></div>\n        <button onClick = {this.submitLogin} class=\"btn btn-primary\">Show Users</button>\n        </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}