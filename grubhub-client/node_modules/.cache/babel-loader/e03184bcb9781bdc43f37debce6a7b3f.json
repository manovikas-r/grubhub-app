{"ast":null,"code":"var _jsxFileName = \"/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/ImageUploader.js\";\nimport React, { Component } from 'react';\n\nconst axios = require(\"axios\");\n\nclass ImageUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.onUpload = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append(\"myImage\", this.state.file);\n      const uploadConfig = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post(\"http://localhost:3001/imageupload\", formData, uploadConfig).then(response => {\n        alert(\"Image Uploaded\");\n      });\n    };\n\n    this.state = {\n      file: null\n    };\n    this.onUpload = this.onUpload.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      name: \"myImage\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Upload\"));\n  }\n\n}\n\nexport default ImageUploader;","map":{"version":3,"sources":["/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/ImageUploader.js"],"names":["React","Component","axios","require","ImageUploader","constructor","props","onChange","e","setState","file","target","files","onUpload","preventDefault","formData","FormData","append","state","uploadConfig","headers","post","then","response","alert","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAClCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,QATmB,GASPC,CAAD,IAAO;AACd,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf;AADI,OAAd;AAGH,KAbkB;;AAAA,SAenBC,QAfmB,GAePL,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAAKC,KAAL,CAAWR,IAAtC;AACA,YAAMS,YAAY,GAAG;AACjBC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADQ,OAArB;AAKAlB,MAAAA,KAAK,CAACmB,IAAN,CAAW,mCAAX,EAAgDN,QAAhD,EAA0DI,YAA1D,EACKG,IADL,CACWC,QAAD,IAAc;AAChBC,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACH,OAHL;AAIH,KA5BkB;;AAEf,SAAKN,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAE;AADG,KAAb;AAGA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcY,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKlB,QAAL,GAAgB,KAAKA,QAAL,CAAckB,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAuBDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAM,MAAA,QAAQ,EAAE,KAAKb,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,SAAxB;AAAkC,MAAA,QAAQ,EAAE,KAAKN,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ;AAMH;;AAtCiC;;AAyCtC,eAAeH,aAAf","sourcesContent":["import React, { Component } from 'react';\nconst axios = require(\"axios\");\n\nclass ImageUploader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null\n        };\n        this.onUpload = this.onUpload.bind(this);\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange = (e) => {\n        this.setState({\n            file: e.target.files[0]\n        });\n    }\n\n    onUpload = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append(\"myImage\", this.state.file);\n        const uploadConfig = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        };\n        axios.post(\"http://localhost:3001/imageupload\", formData, uploadConfig)\n            .then((response) => {\n                alert(\"Image Uploaded\");\n            });\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.onUpload}>\n                <input type=\"file\" name=\"myImage\" onChange={this.onChange} />\n                <button type=\"submit\">Upload</button>\n            </form>\n        )\n    }\n}\n\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}