{"ast":null,"code":"var _jsxFileName = \"/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/login.js\";\nimport React, { Component } from 'react'; //import '../../App.css';\n\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\n\nclass Login extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      var headers = new Headers(); //prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      }; //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post('http://localhost:3001/login', data).then(response => {\n        console.log(\"Status Code : \", response.status);\n\n        if (response.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          authFlag: false,\n          message: error.response.data\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      authFlag: false,\n      errorMessage: \"\"\n    }; //Bind the handlers to this class\n\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    //redirect based on successful login\n    let redirectVar = null;\n\n    if (cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"main-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Admin Login\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Please enter your username and password\")), React.createElement(\"form\", {\n      onSubmit: this.submitLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.usernameChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      required: true,\n      name: \"username\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.passwordChangeHandler,\n      type: \"password\",\n      class: \"form-control\",\n      required: true,\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Login\"))))));\n  }\n\n} //export Login Component\n\n\nexport default Login;","map":{"version":3,"sources":["/Users/manovikas/Documents/GitHub/grubhub-app/grubhub-client/src/components/login.js"],"names":["React","Component","axios","cookie","Redirect","Login","constructor","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","submitLogin","headers","Headers","preventDefault","data","state","defaults","withCredentials","post","then","response","console","log","status","authFlag","catch","error","message","errorMessage","bind","componentWillMount","render","redirectVar","load","color"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAAQC,QAAR,QAAuB,cAAvB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA6B;AACzB;AACAK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd;AACA,UAAMA,KAAN,EAFc,CAGd;;AAHc,SAsBlBC,qBAtBkB,GAsBOC,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAGF,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGH,KA1BiB;;AAAA,SA4BlBC,qBA5BkB,GA4BOL,CAAD,IAAO;AAC3B,WAAKC,QAAL,CAAc;AACVK,QAAAA,QAAQ,EAAGN,CAAC,CAACG,MAAF,CAASC;AADV,OAAd;AAGH,KAhCiB;;AAAA,SAkClBG,WAlCkB,GAkCHP,CAAD,IAAO;AACjB,UAAIQ,OAAO,GAAG,IAAIC,OAAJ,EAAd,CADiB,CAEjB;;AACAT,MAAAA,CAAC,CAACU,cAAF;AACA,YAAMC,IAAI,GAAG;AACTT,QAAAA,QAAQ,EAAG,KAAKU,KAAL,CAAWV,QADb;AAETI,QAAAA,QAAQ,EAAG,KAAKM,KAAL,CAAWN;AAFb,OAAb,CAJiB,CAQjB;;AACAb,MAAAA,KAAK,CAACoB,QAAN,CAAeC,eAAf,GAAiC,IAAjC,CATiB,CAUjB;;AACArB,MAAAA,KAAK,CAACsB,IAAN,CAAW,6BAAX,EAAyCJ,IAAzC,EACCK,IADD,CACMC,QAAQ,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BF,QAAQ,CAACG,MAAtC;;AACA,YAAGH,QAAQ,CAACG,MAAT,KAAoB,GAAvB,EAA2B;AACvB,eAAKnB,QAAL,CAAc;AACVoB,YAAAA,QAAQ,EAAG;AADD,WAAd;AAGH,SAJD,MAKI;AACA,eAAKpB,QAAL,CAAc;AACVoB,YAAAA,QAAQ,EAAG;AADD,WAAd;AAGH;AACR,OAbD,EAcCC,KAdD,CAcOC,KAAK,IAAI;AACZ,aAAKtB,QAAL,CAAc;AACVoB,UAAAA,QAAQ,EAAG,KADD;AAEVG,UAAAA,OAAO,EAAGD,KAAK,CAACN,QAAN,CAAeN;AAFf,SAAd;AAIH,OAnBD;AAqBH,KAlEiB;;AAId,SAAKC,KAAL,GAAa;AACTV,MAAAA,QAAQ,EAAG,EADF;AAETI,MAAAA,QAAQ,EAAG,EAFF;AAGTe,MAAAA,QAAQ,EAAG,KAHF;AAITI,MAAAA,YAAY,EAAG;AAJN,KAAb,CAJc,CAUd;;AACA,SAAK1B,qBAAL,GAA6B,KAAKA,qBAAL,CAA2B2B,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKrB,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BqB,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKnB,WAAL,GAAmB,KAAKA,WAAL,CAAiBmB,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAhBwB,CAiBzB;;;AACAC,EAAAA,kBAAkB,GAAE;AAChB,SAAK1B,QAAL,CAAc;AACVoB,MAAAA,QAAQ,EAAG;AADD,KAAd;AAGH,GAtBwB,CAuBzB;;;AA+CAO,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAGnC,MAAM,CAACoC,IAAP,CAAY,QAAZ,CAAH,EAAyB;AACrBD,MAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,WADL,EAEA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFJ,CADJ,EAKI;AAAM,MAAA,QAAQ,EAAE,KAAKtB,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAACwB,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKnB,KAAL,CAAWY,OAA5C,CADA,EAEI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,EAAI,KAAKzB,qBAAxB;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,KAAK,EAAC,cAAjE;AAAgF,MAAA,QAAQ,MAAxF;AAAyF,MAAA,IAAI,EAAC,UAA9F;AAAyG,MAAA,WAAW,EAAC,UAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAKI;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,EAAI,KAAKM,qBAAxB;AAA+C,MAAA,IAAI,EAAC,UAApD;AAA+D,MAAA,KAAK,EAAC,cAArE;AAAoF,MAAA,QAAQ,MAA5F;AAA6F,MAAA,IAAI,EAAC,UAAlG;AAA6G,MAAA,WAAW,EAAC,UAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,EAQI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,iBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,CALJ,CADJ,CAFJ,CAFA,CADJ;AA0BH;;AAtGwB,C,CAwG7B;;;AACA,eAAeT,KAAf","sourcesContent":["import React, {Component} from 'react';\n//import '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Redirect} from 'react-router';\n\nclass Login extends Component{\n    //call the constructor method\n    constructor(props){\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            username : \"\",\n            password : \"\",\n            authFlag : false,\n            errorMessage : \"\"\n        }\n        //Bind the handlers to this class\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n        this.submitLogin = this.submitLogin.bind(this);\n    }\n    //Call the Will Mount to set the auth Flag to false\n    componentWillMount(){\n        this.setState({\n            authFlag : false\n        })\n    }\n    //username change handler to update state variable with the text entered by the user\n    usernameChangeHandler = (e) => {\n        this.setState({\n            username : e.target.value\n        })\n    }\n    //password change handler to update state variable with the text entered by the user\n    passwordChangeHandler = (e) => {\n        this.setState({\n            password : e.target.value\n        })\n    }\n    //submit Login handler to send a request to the node backend\n    submitLogin = (e) => {\n        var headers = new Headers();\n        //prevent page from refresh\n        e.preventDefault();\n        const data = {\n            username : this.state.username,\n            password : this.state.password\n        }\n        //set the with credentials to true\n        axios.defaults.withCredentials = true;\n        //make a post request with the user data\n        axios.post('http://localhost:3001/login',data)\n        .then(response => {\n                console.log(\"Status Code : \",response.status);\n                if(response.status === 200){\n                    this.setState({\n                        authFlag : true\n                    })\n                }\n                else{\n                    this.setState({\n                        authFlag : false\n                    })\n                }\n        })\n        .catch(error => {\n            this.setState({\n                authFlag : false,\n                message : error.response.data\n            })\n        });\n            \n    }\n\n    render(){\n        //redirect based on successful login\n        let redirectVar = null;\n        if(cookie.load('cookie')){\n            redirectVar = <Redirect to= \"/home\"/>\n        }\n        return(\n            <div>\n                {redirectVar}\n            <div class=\"container\">\n                \n                <div class=\"login-form\">\n                    <div class=\"main-div\">\n                        <div class=\"panel\">\n                            <h2>Admin Login</h2>\n                            <p>Please enter your username and password</p>\n                        </div>\n                        <form onSubmit={this.submitLogin}>\n                        <div style={{color: \"#ff0000\"}}>{this.state.message}</div>\n                            <div class=\"form-group\">\n                                <input onChange = {this.usernameChangeHandler} type=\"text\" class=\"form-control\" required name=\"username\" placeholder=\"Username\"/>\n                            </div>\n                            <div class=\"form-group\">\n                                <input onChange = {this.passwordChangeHandler} type=\"password\" class=\"form-control\" required name=\"password\" placeholder=\"Password\"/>\n                            </div>\n                            <button type=\"submit\" class=\"btn btn-primary\">Login</button>    \n                            </form>             \n                    </div>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n//export Login Component\nexport default Login;"]},"metadata":{},"sourceType":"module"}